name: 'VYROW'
description: 'Render all Markdown documents in your repository into HTML documents.'
branding:
  color: purple
  icon: cast

inputs:
  working-directory:
    description: 'The directory containing the source Markdown documents that will be converted into output HTML documents.'
    required: true
    default: 'dist'

  pandoc-script:
    description: 'Custom script that runs the `pandoc` program.'
    required: false

  pandoc-template:
    description: 'Custom Pandoc HTML template.'
    required: false

  stylesheet:
    description: 'Custom stylesheet file to use for the rendered website.'
    required: false

  website-root:
    description: 'Custom website root directory.'
    required: false

  head:
    description: 'An additional file that contains some additional HTML data to input into `<head>`.'
    required: false

  copy-from:
    description: 'Copy all files from given directory to the output directory to be included in the output website.'
    required: false

runs:
  using: 'composite'
  steps:
    - name: 'Install `pandoc`'
      working-directory: ${{ github.action_path }}
      shell: bash
      run: ./install-pandoc.sh

    - name: 'Install `pandoc-katex`'
      working-directory: ${{ github.action_path }}
      shell: bash
      run: ./install-pandoc-katex.sh

    - name: 'Conditionally copy all files to the working directory'
      shell: bash
      run: |
        wrk_dir="${{ inputs.working-directory }}"
        src_dir="${{ inputs.copy-from }}"

        mkdir -p -- "$wrk_dir"

        "${{ github.action_path }}"/copy-from.sh "$wrk_dir" "$src_dir"

    - name: 'Render the Markdown documents'
      shell: bash
      # compose the Pandoc script command out of given inputs
      run: |
        pandoc_script="${{ inputs.pandoc-script }}"
        if [ -n "$pandoc_script" ]; then
          command="$pandoc_script"
        else
          command="${{ github.action_path }}/pandoc.sh"
        fi

        working_directory="${{ inputs.working-directory }}"
        if [ -n "$working_directory" ]; then
          d="-d$working_directory"
        fi

        pandoc_template="${{ inputs.pandoc-template }}"
        if [ -n "$pandoc_template" ]; then
          t="-t$pandoc_template"
        fi

        stylesheet="${{ inputs.stylesheet }}"
        if [ -n "$stylesheet" ]; then
          s="-s$stylesheet"
        fi

        head="${{ inputs.head }}"
        if [ -n "$head" ]; then
          h="-h$head"
        fi

        website_root="${{ inputs.website-root }}"
        if [ -n "$website_root" ]; then
          r="-r$website_root"
        fi

        "$command" "$d" "$r" "$h" "$s" "$t"

    - name: 'Fix all `.md` links'
      shell: bash
      working-directory: ${{ inputs.working-directory }}
      run: "${{ github.action_path }}/fix-links.sh"

    - name: 'Rename the main readme file'
      shell: bash
      working-directory: ${{ inputs.working-directory }}
      run: "${{ github.action_path}}/rename-index.sh"
